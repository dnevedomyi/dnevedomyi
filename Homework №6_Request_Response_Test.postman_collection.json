{
	"info": {
		"_postman_id": "f091290e-e4d2-48ca-98bb-55450c51662d",
		"name": "Homework №6_Request_Response_Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Задание № 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1.Отправить запрос.",
							"http://162.55.220.72:5005/first",
							"//2.Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// 3. Проверить, что в body приходит правильный string",
							"",
							"pm.test(\"Проверить, что в body приходит правильный string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "Задание №2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1.Отправить запрос.",
							"//2.Статус код 200",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"",
							"// 3. Спарсить response body в json.",
							"var Dima = pm.response.json();",
							"let resp_name = Dima.name",
							"let resp_age = Dima.age",
							"let resp_salary= Dima.salary",
							"let resp_family = Dima.family",
							"",
							"// 4. Проверить, что name в ответе равно name s request (name вбить руками.)",
							"",
							"pm.test(\"Check name\", function () {",
							"    pm.expect(resp_name).to.eql(\"Dima\");",
							" });",
							"",
							"// 5. Проверить, что age в ответе равно age s request (age вбить руками.)",
							"",
							"pm.test(\"Check age\", function () {",
							"  pm.expect(resp_age).to.eql(\"35\");",
							"});",
							"",
							"// 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)",
							"",
							"pm.test(\"Check salary\", function () {",
							"  pm.expect(resp_salary).to.eql(2200);",
							"});",
							"",
							"// 7. Спарсить request.",
							"var reqBody = request.data",
							"",
							"let req_name = reqBody.name",
							"let req_age = reqBody.age",
							"let req_family = reqBody.family",
							"let req_salary = reqBody.salary",
							"",
							"// 8.Проверить, что name в ответе равно name s request (name забрать из request.)",
							"pm.test(\"Name в ответе равно name s request\", function () {",
							"pm.expect(resp_name).to.eql(req_name);",
							"});",
							"",
							"// 9. Проверить, что age в ответе равно age s request (age забрать из request.)",
							"pm.test(\"Age в ответе равно age s request\", function () {",
							"pm.expect(resp_age).to.eql(req_age);",
							"});",
							"",
							"// 10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)",
							"",
							" pm.test(\"Salary в ответе равно salary s request\", function () {",
							"pm.expect(resp_salary).to.eql+(req_salary);",
							"});",
							"",
							"// 11. Вывести в консоль параметр family из response.",
							"console.log (\"resp_family = \" , resp_family)",
							"",
							"// 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)",
							"",
							"pm.test(\"u_salary_1_5_year в ответе равно salary*4\", function () {",
							"    pm.expect(Dima.family.u_salary_1_5_year).to.eql(reqBody.salary*4);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Dima",
							"type": "text"
						},
						{
							"key": "age",
							"value": "35",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2200",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Задание №3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1.Отправить запрос.",
							"//2.Статус код 200",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"",
							"// 3. Спарсить response body в json.",
							"var Dmitriy = pm.response.json();",
							"var reqBody = request.data",
							"let resp_name = Dmitriy.name",
							"let resp_age = Dmitriy.age",
							"let resp_salary = Dmitriy.salary",
							"// 4. Спарсить request.",
							"var reqBody = request.data",
							"let req_name = reqBody.name",
							"let req_age = reqBody.age",
							"let req_salary = reqBody.salary",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)",
							"pm.test(\"Name в ответе равно name s request\", function () {",
							"    pm.expect(resp_name).to.eql+(req_name);",
							"});",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)",
							"pm.test(\"Age в ответе равно age s request\", function () {",
							"    pm.expect(resp_age).to.eql+(req_age);",
							"});",
							"// 7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)",
							"pm.test(\"Salary в ответе равно salary s request\", function () {",
							"    pm.expect(resp_salary).to.eql+(req_salary);",
							"});",
							"// 8. Вывести в консоль параметр family из response.",
							"let resp_family = Dmitriy.family",
							"console.log (resp_family)",
							"",
							"// 9. Проверить, что у параметра dog есть параметры name.",
							"pm.test(\"Проверить, что у параметра dog есть параметры name\", function () {",
							"    pm.expect(Dmitriy.family.pets.dog).to.have.property(\"name\");",
							"});",
							"",
							"// 10. Проверить, что у параметра dog есть параметры age.",
							"pm.test(\"Проверить, что у параметра dog есть параметры age\", function () {",
							"    pm.expect(Dmitriy.family.pets.dog).to.have.any.keys(\"age\");",
							"    });",
							"",
							"//11. Проверить, что параметр name имеет значение Luky.",
							"pm.test(\"Проверить, что параметр name имеет значение Luky.\", function () {",
							"    pm.expect(Dmitriy.family.pets.dog.name).to.eql(\"Luky\");",
							"    });",
							"//12. Проверить, что параметр age имеет значение 4.",
							"pm.test(\"Проверить, что параметр age имеет значение 4\", function () {",
							"    pm.expect(Dmitriy.family.pets.dog.age).to.eql(4);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Dmitriy&age=35&salary=2500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Dmitriy"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "2500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Задание №4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1.Отправить запрос.",
							"//2.Статус код 200",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"",
							"// 3. Спарсить response body в json.",
							"var Dima = pm.response.json();",
							"var Dim = JSON.parse(responseBody);",
							"var salary = Dim.salary",
							"var Dimon = pm.request.url.query.toObject()",
							"",
							"let resp_salary = Dima.salary",
							"let resp_name = Dima.name",
							"let resp_age = Dima.age",
							"",
							"// 4. Спарсить request.",
							"let req_salary = Dimon.salary",
							"let req_name = Dimon.name",
							"let req_age = Dimon.age",
							"",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)",
							"pm.test(\"Request name\", function () {",
							"    pm.expect(Dima.name).to.eql+(req_name)",
							"    });",
							"",
							"// 6. Проверить, что age в ответе равно age из request (age забрать из request.)",
							"pm.test(\"Request age\", function () {",
							"    pm.expect(req_age).to.eql+(Dima.age);",
							"});",
							"",
							"// 7. Вывести в консоль параметр salary из request.",
							"",
							" console.log (\"req_salary = \" + req_salary);",
							"",
							"",
							"//8. Вывести в консоль параметр salary из response.",
							"console.log (\"resp_salary = \" + resp_salary)",
							"",
							"//9. Вывести в консоль 0-й элемент параметра salary из response.",
							"console.log (\"Нулевой элемент = \" + resp_salary [0])",
							"//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.",
							"console.log (\"Первый элемент = \" + resp_salary [1])",
							"// 11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.",
							"console.log (\"Второй элемент = \" + resp_salary [2])",
							"// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)",
							"",
							"pm.test(\"0-й элемент параметра salary равен salary из request\", function () {",
							"    pm.expect(resp_salary[0]).to.eql+(req_salary);",
							"});",
							" ",
							"// 13.Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)",
							"pm.test(\"1-й элемент параметра salary равен salary*2 из request\", function () {",
							"    pm.expect(resp_salary[1]).to.eql+(req_salary*2);",
							"});",
							"",
							"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)",
							"pm.test(\"2-й элемент параметра salary равен salary*3 из request\", function () {",
							"    pm.expect(resp_salary[2]).to.eql+(req_salary*3);",
							"});",
							"",
							"// 18. Передать в окружение переменную salary",
							" pm.environment.set(\"salary\", resp_salary[0]);",
							"// 19. Передать в окружение переменную name",
							" pm.environment.set(\"name\", resp_name);",
							"// 20. Передать в окружение переменную age",
							" pm.environment.set(\"age\", resp_age);",
							"// 21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.",
							"var arr_len = salary.length",
							"console.log (\"arr_len = \" + arr_len);",
							"for (var i = 0; i < arr_len; i ++ ){",
							"console.log(salary[i])",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Dima&age=35&salary=3200",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Dima"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "3200"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Задание №5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Вставить параметр salary из окружения в salary",
							"//2. Вставить параметр age из окружения в age",
							"",
							"//3. Вставить параметр name из окружения в name",
							"",
							"",
							"// 4. Отправить запрос.",
							"// 5. Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// 6. Спарсить response body в json.",
							"var Dima = pm.response.json();",
							"",
							"// 7. Спарсить request.",
							"var Dimon = request.data",
							"var Dimka = pm.request.url.query.toObject()",
							"var Di = JSON.parse(responseBody);",
							"",
							"// 8. Проверить, что json response имеет параметр start_qa_salary",
							"",
							"pm.test(\"json response имеет параметр start_qa_salary\", function () {",
							"    pm.expect(Dima).to.have.any.keys(\"start_qa_salary\");",
							"});",
							"",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months",
							"pm.test(\"json response имеет параметр qa_salary_after_6_months\", function () {",
							"    pm.expect(Dima).to.have.any.keys(\"qa_salary_after_6_months\");",
							"});",
							"",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months",
							"pm.test(\"json response имеет параметр qa_salary_after_12_months\", function () {",
							"    pm.expect(Dima).to.have.any.keys(\"qa_salary_after_12_months\");",
							"});",
							"",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year",
							"pm.test(\"json response имеет параметр qa_salary_after_1.5_year\", function () { ",
							"    pm.expect(Dima).to.have.any.keys(\"qa_salary_after_1.5_year\");",
							"});",
							"",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years",
							"pm.test(\"json response имеет параметр qa_salary_after_3.5_years\", function () {",
							"    pm.expect(Dima).to.have.any.keys(\"qa_salary_after_3.5_years\");",
							"}); ",
							"",
							"// 13.Проверить, что json response имеет параметр person",
							"pm.test(\"json response имеет параметр person\", function () {",
							"    pm.expect(Dima).to.have.any.keys(\"person\");",
							"}); ",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)",
							"    pm.test(\"start_qa_salary равен salary\", function () {",
							"     pm.expect(Dima.start_qa_salary).to.eql+(Dimon.salary);",
							"});",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)",
							"    pm.test(\"qa_salary_after_6_months равен salary*2\", function () {",
							"     pm.expect(Dima.qa_salary_after_6_months).to.eql+(Dimon.salary*2);",
							"});",
							"//16.Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.",
							"    pm.test(\"qa_salary_after_12_months равен salary*2.7\", function () {",
							"     pm.expect(Dima.qa_salary_after_12_months).to.eql(Dimon.salary*2.7);",
							"});",
							"//17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)",
							"    pm.test(\"qa_salary_after_1.5_year равен salary*3.3\", function () {",
							"    pm.expect(Dima[\"qa_salary_after_1.5_year\"]).to.eql(Dimon.salary*3.3);",
							"});",
							"//  18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)",
							"    pm.test(\"qa_salary_after_3.5_years равен salary*3.8\", function () {",
							"    pm.expect(Dima[\"qa_salary_after_3.5_years\"]).to.eql(Dimon.salary*3.8);",
							"});",
							"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)",
							"    pm.test(\"В параметре person, 1-й элемент из u_name равен salary из request\", function () {",
							"    pm.expect(Dima.person.u_name [1]).to.eql+(Dimon.salary);",
							"});",
							"// 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)",
							"     pm.test(\"Параметр u_age равен age из request\", function () {",
							"     pm.expect(Dima.person.u_age).to.eql+(Dimon.u_age);",
							"});",
							"//21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)",
							"    pm.test(\"u_salary_5_years равен salary*4.2\", function () {",
							"     pm.expect(Dima.u_salary_5_years).to.eql+(Dimon.salary);",
							" });",
							"// 22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.",
							"var count = 1",
							"var person = Dima.person.u_name",
							"var arr_len = person.length",
							"console.log (\"arr_len = \" + arr_len);",
							"for (var i = 0; i < arr_len; i ++ ){",
							"console.log(count,person[i])",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}