----------------------------------------------------------------------------------------------------------------------------------------------------------------
																							                             Homework №2
-----------------------------------------------------------------------------------------------------------------------------------------------------------------

											JSON
									https://github.com/dnevedomyi/JSON.git

1. Создать внешний репозиторий c названием JSON:-> 
Авторизоваться на сайте GitHub, открыть вкладку "Repositories",-> New ->Repository name ->(Ввести JSON)-> Create repository
2. Клонировать репозиторий JSON на локальный компьютер: ->
git clone https://github.com/dnevedomyi/JSON.git 
3. Внутри локального JSON создать файл "new.json":->
cd JSON -> touch new.json
4. Добавить файл под гит:->
git add new.json
5. Закоммитить файл:->
git commit -m "This is my JSON File"
6. Отправить файл на внешний GitHub репозиторий.->
git push
 7. Отредактировать содержание файла "new.json" - написать информацию о себе 
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
Всё написать в формате JSON.->
vim new.json ->I->Внести информацию->:wq
8. Отправить изменения на внешний репозиторий.->
git fetch -> git pull
 9. Создать файл preferences.json
touch preferences.json
10. В файл preferences.json добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) 
в формате JSON.
vim -> preferences.json
 11. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON 
touch skills.json 
vim skills.json 
 12. Отправить сразу 2 файла на внешний репозиторий. -> git push
 13. На веб интерфейсе создать файл bug_report.json.-> Открыть репозиторий JSON -> Add file ->Create new file ->Заполнить форму Name your file(ввести bug_report.json) 
 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе.JSON -> Commit new file -> Add an optional extended description -> Нажать на зеленую кнопку "Commit new file"
15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.Открыть файл bug_report.json ->нажать на значок редактирования (иконка в виде карандаша)->внести нужные изменения 
16. Сделать Commit changes (сохранить) изменения на веб интерфейсе.->Commit new file -> Add an optional extended description -> Нажать на зеленую кнопку "Commit new file" 
17. Синхронизировать внешний и локальный репозиторий JSON ->git fetch -> git pull
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
														XML
												https://github.com/dnevedomyi/XML.git
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  1. Создать внешний репозиторий c названием XML.
Авторизоваться на сайте GitHub, открыть вкладку "Repositories",-> New ->Repository name (Ввести XML) -> Create repository
 2. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/dnevedomyi/XML.git
 3. Внутри локального XML создать файл "new.xml".
cd XML -> touch new.xml
 4. Добавить файл под гит.
git add new.xml
 5. Закоммитить файл.
git commit -m "This is my XML File"
 6. Отправить файл на внешний GitHub репозиторий.
git push
 7. Отредактировать содержание файла "new.xml" - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
vim new.xml -> I -> Внести информацию ->:wq
 8. Отправить изменения на внешний репозиторий.
git fetch -> git pull
 9. Создать файл preferences.xml
touch preferences.xml
 10. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
vim -> preferences.xml 
11. Создать файл skills.xml добавить информацию о скилах которые будут изучены на курсе в формате XML
touch skills.json
vim skills.json 
 12. Сделать коммит в одну строку.
git add-commit -m "Мой комментарий в одну строку" 
13. Отправить сразу 2 файла на внешний репозиторий.
git push
 14. На веб интерфейсе создать файл bug_report.xml.
Открыть репозиторий XML -> Add file ->Create new file ->Заполнить форму Name your file(ввести bug_report.xml)
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
XML -> Commit new file -> Add an optional extended description -> Нажать на зеленую кнопку "Commit new file"
 16. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
Открыть файл bug_report.xml ->нажать на значок редактирования (иконка в виде карандаша)->внести нужные изменения 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit new file -> Add an optional extended description -> Нажать на зеленую кнопку "Commit new file" 
 18. Синхронизировать внешний и локальный репозиторий XML
git fetch -> git pull
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
													TXT
											https://github.com/dnevedomyi/TXT.git
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 1. Создать внешний репозиторий c названием TXT.
Авторизоваться на сайте GitHub, открыть вкладку "Repositories",-> New ->Repository name ->(Ввести TXT)-> Create repository 
 2. Клонировать репозиторий TXT на локальный компьютер.
git clone https://github.com/dnevedomyi/TXT.git
 3. Внутри локального TXT создать файл "new.txt".
cd TXT -> touch new.txt
 4. Добавить файл под гит.
git add new.txt
 5. Закоммитить файл.
git commit -m "This is my TXT File"
 6. Отправить файл на внешний GitHub репозиторий.
git push
 7. Отредактировать содержание файла "new.txt" - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
vim new.txt ->I->Внести информацию->:wq
 8. Отправить изменения на внешний репозиторий.
git fetch -> git pull
 9. Создать файл preferences.txt
touch preferences.txt
 10. В файл preferences.txt" добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
vim -> preferences.txt
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
touch skills.txt
vim skills.txt  
 12. Сделать коммит в одну строку.
git add-commit -m "Мой комментарий в одну строку"
 13. Отправить сразу 2 файла на внешний репозиторий.
git push
 14. На веб интерфейсе создать файл bug_report.txt.
Открыть репозиторий TXT -> Add file ->Create new file ->Заполнить форму Name your file(ввести bug_report.txt) 
15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
TXT -> Commit new file -> Add an optional extended description -> Нажать на зеленую кнопку "Commit new file"
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
Открыть файл bug_report.txt ->нажать на значок редактирования (иконка в виде карандаша)->внести нужные изменения 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit new file -> Add an optional extended description -> Нажать на зеленую кнопку "Commit new file" 
 18. Синхронизировать внешний и локальный репозиторий TXT
git fetch -> git pull



